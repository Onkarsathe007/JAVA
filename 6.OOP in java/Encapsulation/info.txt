Encapsulation 
Encapsulation is the process of combining data and functions
 into a single unit called class. 
 In Encapsulation, the data is not accessed directly;
 it is accessed through the functions present inside the class. 
 In simpler words, attributes of the class are kept private and public getter
 \and setter methods are provided to manipulate these attributes.
 Thus, encapsulation makes the concept of 'data hiding' possible.
 (Data hiding: a language feature to restrict access to members of an object,
 reducing the negative effect due to dependencies. e.g. "protected",
 "private" feature in Java). 

*Access Modifiers in Java

Private: The access level of a private modifier is only within the class. 
  It cannot be accessed from outside the class.

Default: The access level of a default modifier is only within the package.
  It cannot be accessed from outside the package. 
  If you do not specify any access level, it will be the default.

Protected: The access level of a protected modifier is within the package and
  outside the package through child class. If you do not make the child class,
  it cannot be accessed from outside the package.

Public: The access level of a public modifier is everywhere. 
  It can be accessed from within the class, outside the class, 
  within the package and outside the package